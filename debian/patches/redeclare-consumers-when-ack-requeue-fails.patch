From f201314484930071ee9fb8b93174f938e58c4e26 Mon Sep 17 00:00:00 2001
From: Mehdi Abaakouk <mehdi.abaakouk@enovance.com>
Date: Tue, 5 May 2015 10:29:22 +0200
Subject: [PATCH 1/1] rabbit: redeclare consumers when ack/requeue fail

In case the acknowledgement or requeue of a message fail,
the kombu transport can be disconnected

In this case, we must redeclare our consumers.

This changes fixes that.

This have no tests because the kombu memory transport we use in our tests
cannot be in disconnected state.

Closes-bug: #1448650

Change-Id: I5991a4cf827411bc27c857561d97461212a17f40
(cherry picked from commit 415db68b67368d7c8aa550e7108122200816e665)

Conflicts:
	oslo_messaging/_drivers/impl_rabbit.py
---
 oslo_messaging/_drivers/impl_rabbit.py           |  7 +++++++
 oslo_messaging/tests/drivers/test_impl_rabbit.py | 16 ++++++++++++++++
 2 files changed, 23 insertions(+)

--- a/oslo_messaging/_drivers/impl_rabbit.py
+++ b/oslo_messaging/_drivers/impl_rabbit.py
@@ -1051,6 +1051,13 @@ class Connection(object):
                       exc)
 
         def _consume():
+            # NOTE(sileht): in case the acknowledgement or requeue of a
+            # message fail, the kombu transport can be disconnected
+            # In this case, we must redeclare our consumers, so raise
+            # a recoverable error to trigger the reconnection code.
+            if not self.connection.connected:
+                raise self.connection.recoverable_connection_errors[0]
+
             if self.do_consume:
                 queues_head = self.consumers[:-1]  # not fanout.
                 queues_tail = self.consumers[-1]  # fanout
--- a/oslo_messaging/tests/drivers/test_impl_rabbit.py
+++ b/oslo_messaging/tests/drivers/test_impl_rabbit.py
@@ -208,6 +208,22 @@ class TestRabbitIterconsume(test_utils.B
                 conn.connection.reset()
                 self.assertEqual(channel, conn.connection.channel)
 
+    def test_connection_ack_have_disconnected_kombu_connection(self):
+        transport = oslo_messaging.get_transport(self.conf,
+                                                 'kombu+memory:////')
+        self.addCleanup(transport.cleanup)
+        with transport._driver._get_connection(amqp.PURPOSE_LISTEN) as conn:
+            conn.connection.connection.recoverable_channel_errors = (IOError,)
+            with mock.patch('kombu.connection.Connection.connected',
+                            new_callable=mock.PropertyMock,
+                            return_value=False):
+                channel = conn.channel
+                conn.connection.connected = False
+                self.assertRaises(driver_common.Timeout,
+                                  conn.consume, timeout=0.01)
+                # Ensure a new channel have been setuped
+                self.assertNotEqual(channel, conn.channel)
+
 
 class TestRabbitTransportURL(test_utils.BaseTestCase):
 
